#+TITLE: Starter Kit Bindings
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Bindings

Key Bindings.

** Align your code in a pretty way
#+begin_src emacs-lisp
  (global-set-key (kbd "M-a") 'align-regexp)
#+end_src

** Completion that uses many different methods to find options
#+begin_src emacs-lisp
  (global-set-key (kbd "M-/") 'hippie-expand)
#+end_src

** Font size
#+begin_src emacs-lisp
  (define-key global-map (kbd "C-+") 'text-scale-increase)
  (define-key global-map (kbd "C--") 'text-scale-decrease)
#+end_src

** Use regex searches by default
#+begin_src emacs-lisp
  (global-set-key (kbd "C-s") 'isearch-forward-regexp)
  (global-set-key (kbd "C-r") 'isearch-backward-regexp)
#+end_src

** File finding
#+begin_src emacs-lisp
  (global-set-key (kbd "C-o")     'find-file)
  (global-set-key (kbd "C-x C-b") 'ibuffer)
  (global-set-key (kbd "C-x r")   'recentf-ido-find-file)
  (global-set-key (kbd "C-x C-r") 'recentf-ido-find-file)
#+end_src

** Buffer handling
#+begin_src emacs-lisp
  (global-set-key (kbd "M-r")     'revert-buffer)
  (global-set-key (kbd "C-w")     'kill-this-buffer)
  (global-set-key (kbd "C-x C-k") 'sk-delete-current-buffer-file)
#+end_src

** Window switching (C-x o goes to the next window)
#+begin_src emacs-lisp
  ;;(windmove-default-keybindings) ;; Shift+direction
  (global-set-key (kbd "<C-tab>") 'other-window)
#+end_src
** Window rotation
#+begin_src emacs-lisp
  (global-set-key (kbd "<s-tab>") 'sk-toggle-window-split)
#+end_src

** Line operations
#+begin_src emacs-lisp
  (global-set-key (kbd "C-l")   'goto-line)
  (global-set-key (kbd "C-x ^") 'join-line)
  (defun backward-kill-line (arg)
    "Kill chars backward until encountering the end of a line."
    (interactive "p")
    (kill-line 0))
  (global-set-key (kbd "C-u")   'backward-kill-line)
  (defun move-line-up ()
    (interactive)
    (transpose-lines 1)
    (forward-line -2))
  (defun move-line-down ()
    (interactive)
    (forward-line 1)
    (transpose-lines 1)
    (forward-line -1))
  (global-set-key (kbd "M-<up>")   'move-line-up)
  (global-set-key (kbd "M-<down>") 'move-line-down)
  (global-set-key (kbd "RET")      'reindent-then-newline-and-indent)
#+end_src

** Activate occur easily inside isearch
#+begin_src emacs-lisp
  (define-key isearch-mode-map (kbd "C-o")
    (lambda () (interactive)
      (let ((case-fold-search isearch-case-fold-search))
        (occur (if isearch-regexp
                   isearch-string
                 (regexp-quote isearch-string))))))
#+end_src

** Undo/redo
#+begin_src emacs-lisp
  (defalias 'redo 'undo-tree-redo)
  (global-set-key (kbd "C-z") 'undo)
  (global-set-key (kbd "C-&") 'redo)
#+end_src

** Smex
#+begin_src emacs-lisp
  (global-set-key (kbd "M-x") 'smex)
#+end_src

** Buffer compilation
#+begin_src emacs-lisp
  (global-set-key (kbd "C-c c") 'compile)
#+end_src

** Toggling fullscreen
#+begin_src emacs-lisp
  (global-set-key [f11] 'sk-toggle-fullscreen)
#+end_src
** Multi-term
#+begin_src emacs-lisp
  (global-set-key (kbd "M-m") 'multi-term)
#+end_src
** Magit
#+begin_src emacs-lisp
  (global-set-key (kbd "M-s") 'magit-status)
#+end_src
